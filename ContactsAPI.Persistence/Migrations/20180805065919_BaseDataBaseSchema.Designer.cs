// <auto-generated />
using System;
using ContactsAPI.Persistence.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContactsAPI.Persistence.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20180805065919_BaseDataBaseSchema")]
    partial class BaseDataBaseSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContactsAPI.DomainModel.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("CreatorRID");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("FirstName")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("LastName")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<DateTime?>("ModificationDate");

                    b.Property<int>("ModifierRID");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.HasIndex("Email", "PhoneNumber")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL AND [PhoneNumber] IS NOT NULL");

                    b.ToTable("Contact");
                });
#pragma warning restore 612, 618
        }
    }
}
